plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    // id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "1.2.1"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


def minecraft_version = "1.16.4"
def yarn_mappings = "1.16.4+build.9:v2"
def fabric_version = "0.34.6+1.16"
def modmenu_version = "1.16.22"
def cloth_config_version = "4.12.41"
def server_translations_version = "1.4.1+1.16"

def mod_version = project.mod_version as Object
version = "${mod_version}+${minecraft_version}"

apply from: '../common.gradle'

dependencies {
    include implementation(project(":modget-minecraft-core"))

    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Bundle required Fabric API modules
    include modImplementation(fabricApi.module("fabric-api-base", fabric_version))
    include modImplementation(fabricApi.module("fabric-command-api-v1", fabric_version))
    include modImplementation(fabricApi.module("fabric-networking-api-v1", fabric_version))

    // Use the full Fabric API while debugging, otherwise ModMenu complains
    modRuntimeOnly "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    // ModMenu integration
    modImplementation "com.terraformersmc:modmenu:${modmenu_version}"
    // Cloth Config for config screen
    modApi("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }


    // if (project.use_third_party_mods) {
    //     configurations {
    //         modRuntimeOnly {
    //             transitive = true
    //             exclude module: "fabric-loader"
    //             exclude module: "fabric-api-base"
    //             exclude module: "fabric-command-api-v1"
    //             exclude module: "fabric-networking-api-v1"
    //             exclude module: "log4j-api"
    //             exclude module: "log4j-core"
    //             exclude module: "commons-text"
    //         }
    //     }

    //     modRuntimeOnly "fr.catcore:server-translations-api:${server_translations_version}"
    //     modRuntimeOnly "curse.maven:borderless-mining-310205:3033277"
    //     modRuntimeOnly "curse.maven:dark-loading-screen-365727:3185761"
    //     // modRuntimeOnly "curse.maven:dynamic-fps-335493:3302730"
    //     // modRuntimeOnly "curse.maven:enhanced-block-entities-452046:3378154"
    //     modRuntimeOnly "curse.maven:lazydfu-433518:3209972"
    //     modRuntimeOnly "curse.maven:lithium-360438:3344974"
    //     modRuntimeOnly "curse.maven:no-fade-452768:3228523"
    //     modRuntimeOnly "curse.maven:phosphor-372124:3294303"
    //     modRuntimeOnly "curse.maven:resolution-control-plus-446974:3206545"
    //     modRuntimeOnly "curse.maven:smooth-boot-415758:3248104"
    //     modRuntimeOnly "curse.maven:sodium-394468:3488820"

    //     // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    //     // You may need to force-disable transitiveness on them.
    // }

}


tasks.withType(JavaCompile).configureEach {
    def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}
